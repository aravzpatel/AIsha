{"version":3,"sources":["Intersect.svg","serviceWorker.js","Welcome.js","EmotionAnalyser.js","graph.js","GraphContainer.js","Logout.js","ChatAgent.js","loginsignup.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Welcome","console","log","this","props","className","Image","src","WelcomeImage","alt","fluid","width","onClick","React","Component","EmotionAnalyser","_isMounted","state","loading","result","trigger","user","user_id","user_input","previousStep","message","axios","post","user_text","then","response","setState","data","triggerNextStep","catch","error","defaultProps","steps","undefined","Graph","series","useMemo","showPoints","axes","primary","type","position","input_data","daysDisplayed","length","label","Array","map","_","i","Date","year","month","day","secondary","moodscore","Fear","Joy","Anger","Sadness","makeSeries","tooltip","style","height","GraphBuilder","logout","ChatAgent","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","botFontSize","userBubbleColor","userFontColor","headerTitle","botAvatar","id","delay","component","waitAction","asMessage","options","value","errorStyles","color","LoginSignUp","onChange","e","target","changeView","view","currentView","name","password","email","error_text","onSubmit","onSubmitSignUp","required","onSubmitLogin","bind","event","preventDefault","success","App","welcome","chat","changeWelcome","changeLogin","logOut","loginsignup","chatagent","Container","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.dcd7be14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/Intersect.c4e6c700.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport WelcomeImage from './Intersect.svg'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\n\r\nclass Welcome extends React.Component{\r\n\r\n\r\n  render(){\r\n    console.log(this.props)\r\n\r\n    return(\r\n      <div className=\"welcome-container\">\r\n\r\n        <Image src={WelcomeImage} alt=\"Image\" fluid width=\"500\" onClick={this.props.onClick}/>\r\n        \r\n        <div className=\"welcome-content\">\r\n          <div className=\"text_shadows\">\r\n          Hello, I'm AIsha\r\n          </div>\r\n        </div>\r\n      \r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot, { Loading } from 'react-simple-chatbot';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EmotionAnalyser extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      result: '',\r\n      trigger: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.user_id\r\n    this._isMounted = true\r\n    var user_input = this.props.previousStep.message\r\n    axios.post('/api/help',{\r\n      user_text: user_input,\r\n      user_id: user\r\n    })\r\n    .then((response) => {\r\n      if(this._isMounted){\r\n        console.log(\"We're inside the response\")\r\n        console.log(\"We're about to setState\")\r\n        this.setState({\r\n          loading: false, \r\n          result: response.data['bot_response'],\r\n          trigger: true\r\n        }, ()=> {\r\n            this.props.triggerNextStep()\r\n        })\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log(\"We're about to componentWillUnmount\")\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    const { trigger, loading, result } = this.state;\r\n\r\n    return (\r\n      <div className=\"dbpedia\">\r\n        { loading ? <Loading /> : result }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEmotionAnalyser.propTypes = {\r\n  steps: PropTypes.object,\r\n  triggerNextStep: PropTypes.func,\r\n};\r\n\r\nEmotionAnalyser.defaultProps = {\r\n  steps: undefined,\r\n  triggerNextStep: undefined,\r\n};\r\n\r\nexport default EmotionAnalyser","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Chart } from \"react-charts\";\r\n// import ResizableBox from \"./ResizableBox\";\r\n\r\n\r\nfunction Graph(props) { \r\n\r\nfunction makeSeries(input_data) {\r\n  var daysDisplayed = 0\r\n  if(input_data.length > 7){\r\n    daysDisplayed = 7;\r\n  } else {\r\n    daysDisplayed = input_data.length;\r\n  }\r\n\r\n\treturn [{\r\n      label: 'Fear',\r\n      data: [...new Array(daysDisplayed)].map((_, i) => {\r\n        const x = new Date(input_data[i].year, input_data[i].month-1, input_data[i].day);\r\n        const y = input_data[i].moodscore.Fear \r\n        return {\r\n          primary: x,\r\n          secondary: y,\r\n      };\r\n\t  })\r\n\t},\r\n  {\r\n    label: 'Joy',\r\n    data: [...new Array(daysDisplayed)].map((_, i) => {\r\n      const x = new Date(input_data[i].year, input_data[i].month-1, input_data[i].day);\r\n      const y = input_data[i].moodscore.Joy \r\n      return {\r\n        primary: x,\r\n        secondary: y,\r\n\t\t\t};\r\n\t\t})\r\n\t},\r\n\t{\r\n    label: 'Anger',\r\n    data: [...new Array(daysDisplayed)].map((_, i) => {\r\n      const x = new Date(input_data[i].year, input_data[i].month-1, input_data[i].day);\r\n      const y = input_data[i].moodscore.Anger \r\n      return {\r\n        primary: x,\r\n        secondary: y,\r\n\t\t\t};\r\n\t\t})\r\n  },\r\n\t{\r\n    label: 'Sadness',\r\n    data: [...new Array(daysDisplayed)].map((_, i) => {\r\n      const x = new Date(input_data[i].year, input_data[i].month-1, input_data[i].day);\r\n      const y = input_data[i].moodscore.Sadness \r\n      return {\r\n        primary: x,\r\n        secondary: y,\r\n\t\t\t};\r\n\t\t})\r\n\t}\r\n];\r\n  }\r\n\r\n\r\n  const series = React.useMemo(\r\n    () => ({\r\n      showPoints: true\r\n    }),\r\n    []\r\n  );\r\n\r\n  const axes = React.useMemo(\r\n    () => [\r\n      {\r\n        primary: true,\r\n        type: \"time\",\r\n        position: \"bottom\"\r\n        // filterTicks: (ticks) =>\r\n        //   ticks.filter((date) => +timeDay.floor(date) === +date),\r\n      },\r\n      { type: \"linear\", position: \"left\" }\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* <ResizableBox> */}\r\n        <Chart data={makeSeries(props.data)} series={series} axes={axes} tooltip style={{width: \"300px\", height: \"300px\"}}/>\r\n      {/* </ResizableBox> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot, { Loading } from 'react-simple-chatbot';\r\nimport axios from 'axios';\r\nimport Graph from './graph'\r\n\r\n\r\nclass GraphBuilder extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      result: '',\r\n      trigger: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true\r\n    const user = this.props.user_id /*this collects the user_id so sub this into the post request for 1*/\r\n    var user_input = this.props.previousStep.message\r\n    axios.post('/profile',{\r\n      user_id: user\r\n    })\r\n    .then((response) => {\r\n      if(this._isMounted){\r\n        this.setState({\r\n          loading: false, \r\n          result: response.data,\r\n          trigger: true\r\n        }, ()=> {\r\n            console.log(this.state.result)\r\n            this.props.triggerNextStep()\r\n        })\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    const { trigger, loading, result } = this.state;\r\n\r\n    return (\r\n      <div className=\"graphcontainer\">\r\n        { loading ? <Loading /> : <Graph data={this.state.result} /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGraphBuilder.propTypes = {\r\n  steps: PropTypes.object,\r\n  triggerNextStep: PropTypes.func,\r\n};\r\n\r\nGraphBuilder.defaultProps = {\r\n  steps: undefined,\r\n  triggerNextStep: undefined,\r\n};\r\n\r\nexport default GraphBuilder","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot, { Loading } from 'react-simple-chatbot';\r\nimport axios from 'axios';\r\nimport Graph from './graph'\r\n\r\n\r\nclass GraphBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      result: '',\r\n      trigger: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.user_id /*this collects the user_id so sub this into the post request for 1*/\r\n    var user_input = this.props.previousStep.message\r\n    axios.post('/logout',{\r\n      user_id: user\r\n    })\r\n    .then((response) => {\r\n      console.log(this.props)\r\n      this.props.logout()\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { trigger, loading, result } = this.state;\r\n\r\n    return (\r\n      <div className=\"graphcontainer\">\r\n        { loading ? <Loading /> : <Graph data={this.state.result} /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGraphBuilder.propTypes = {\r\n  steps: PropTypes.object,\r\n  triggerNextStep: PropTypes.func,\r\n};\r\n\r\nGraphBuilder.defaultProps = {\r\n  steps: undefined,\r\n  triggerNextStep: undefined,\r\n};\r\n\r\nexport default GraphBuilder","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot, { Loading } from 'react-simple-chatbot';\r\nimport EmotionAnalyser from './EmotionAnalyser'\r\nimport WelcomeImage from './Intersect.svg'\r\nimport {ThemeProvider} from 'styled-components'\r\nimport GraphBuilder from './GraphContainer'\r\nimport LogOut from './Logout'\r\n\r\n\r\nclass ChatAgent extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  \r\n  render(){\r\n    console.log(this.props)\r\n\r\n    const theme =  {\r\n      background: '#f5f8fb',\r\n      fontFamily: 'Sans Serif',\r\n      headerBgColor: '#EF6C00',\r\n      headerFontColor: '#fff',\r\n      headerFontSize: '20px',\r\n      botBubbleColor: '#0368F5',\r\n      botFontColor: '#fff',\r\n      botFontSize: '18px',\r\n      userBubbleColor: '#EA8C55',\r\n      userFontColor: '#fff',\r\n    }\r\n\r\n    return(\r\n      <div className=\"chatagent-container\">\r\n        <ThemeProvider theme={theme}>\r\n          <ChatBot\r\n            headerTitle=\"AIsha\"\r\n            botAvatar = {WelcomeImage}\r\n            // speechSynthesis={{ enable: true, lang: 'en' }}\r\n            steps={[\r\n              {\r\n                id: '1',\r\n                message: \"Hi, I'm AIsha\",\r\n                trigger: '2',\r\n              },\r\n              {\r\n                id: '2',\r\n                message: \"I'm your companion to help you get in touch with your emotions\",\r\n                trigger: '3',\r\n              },\r\n              {\r\n                id: '3',\r\n                message: \"So, let's get started.\",\r\n                trigger: '4',\r\n                delay: 1250,\r\n              },\r\n              {\r\n                id: '4',\r\n                message: \"Tell me how you are feeling?\",\r\n                trigger: 'emotion',\r\n              },\r\n              {\r\n                id: 'emotion',\r\n                user: true,\r\n                trigger: '5',\r\n              },\r\n              {\r\n                id: '5',\r\n                component: <EmotionAnalyser user_id={this.props.user_id} />,\r\n                waitAction: true,\r\n                asMessage: true, /*is a component*/\r\n                trigger: '6',\r\n                delay: 1250\r\n              },\r\n              {\r\n                id: '6',\r\n                message: ({steps}) =>\r\n                  `I hope that was helpful.`,\r\n                trigger: '7'\r\n              },\r\n              {\r\n                id: '7',\r\n                options: [\r\n                  {value: 1, label: 'Re-check your emotion', trigger: '4'},\r\n                  {value: 2, label: 'View your Emotion Graph', trigger: 'emotiongraph'},\r\n                  {value: 3, label: 'Logout', trigger: 'logout'}\r\n                ]\r\n              },\r\n              {\r\n                id: 'emotiongraph',\r\n                component: <GraphBuilder user_id={this.props.user_id}/>,\r\n                waitAction: true,\r\n                asMessage: false, /*is a component*/\r\n                trigger: '8',\r\n                delay: 1250\r\n              },\r\n              {\r\n                id: '8',\r\n                message: \"It's useful to check your emotions regularly, come back again tomorrow.\",\r\n                trigger: '9'\r\n              },\r\n              {\r\n                id: '9',\r\n                options: [\r\n                  {value: 3, label: 'Logout', trigger: 'logout'}\r\n                ]\r\n              },\r\n              {\r\n                id: 'logout',\r\n                message: 'Goodbye',\r\n                trigger: '10',\r\n              },\r\n              {\r\n                id: '10',\r\n                component: <LogOut logout={this.props.logout} user_id={this.props.user_id} />,\r\n                trigger: '10',\r\n              }\r\n            ]}\r\n          />\r\n        </ThemeProvider>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ChatAgent;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport './loginsignup.scss';\r\n\r\nconst { Component } = React\r\n\r\nconst errorStyles = {\r\n  color: 'red'\r\n};\r\nclass LoginSignUp extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      currentView: \"logIn\",\r\n      name: '',\r\n      password: '',\r\n      email: '',\r\n      error: '',\r\n      error_text: ''\r\n    }\r\n    this.onSubmitSignUp=this.onSubmitSignUp.bind(this);\r\n    this.onSubmitLogin=this.onSubmitLogin.bind(this);\r\n    this.onChange=this.onChange.bind(this);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onSubmitSignUp(event){\r\n\r\n    event.preventDefault();\r\n    var email = this.state.email\r\n    var name = this.state.name\r\n    var password = this.state.password\r\n    \r\n    axios.post('/signup',{\r\n      email: email,\r\n      name: name,\r\n      password: password\r\n    })\r\n    .then((response) => {\r\n        console.log(\"sign up response recieved\")\r\n        console.log(response.data.error)\r\n        console.log(response.data.data)\r\n        if (response.data.error === true){\r\n          this.setState({\r\n            error: true,\r\n            error_text: response.data.data\r\n         })\r\n        } else {\r\n          console.log(response.data.data)\r\n          this.props.success(response.data.data)\r\n        }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  onSubmitLogin(event){\r\n\r\n    event.preventDefault();\r\n    var email = this.state.email\r\n    var password = this.state.password\r\n    \r\n    axios.post('/login',{\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then((response) => {\r\n      console.log(\"login response recieved\")\r\n      console.log(response.data.error)\r\n      console.log(response.data.data)\r\n      if (response.data.error === true){\r\n        this.setState({\r\n          error: true,\r\n          error_text: response.data.data\r\n       })\r\n      } else {\r\n        console.log(response.data.data)\r\n        this.props.success(response.data.data)\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  changeView = (view) => {\r\n    this.setState({\r\n      currentView: view,\r\n      name: '',\r\n      password: '',\r\n      email: '',\r\n      error: '',\r\n      error_text: ''\r\n    })\r\n  }\r\n \r\n  currentView = () => {\r\n    switch(this.state.currentView) {\r\n      case \"signUp\":\r\n        return (\r\n          <form onSubmit={this.onSubmitSignUp}>\r\n            <h2>Sign Up!</h2>\r\n            <fieldset>\r\n              <legend>Create Account</legend>\r\n              <ul>\r\n                <li>\r\n                  <label style={errorStyles}>{this.state.error_text}</label>\r\n                </li>\r\n                <li>\r\n                  <label>Name:<br></br>\r\n                    <input type=\"text\" onChange={this.onChange} value={this.state.name} id=\"name\" required/>\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <label>Email:<br></br>\r\n                    <input type=\"email\" onChange={this.onChange} value={this.state.email} id=\"email\" required/>\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <label>Password:<br></br>\r\n                    <input type=\"password\" onChange={this.onChange} value={this.state.password} id=\"password\" required/>\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n            <button>Submit</button>\r\n            <button type=\"button\" onClick={ () => this.changeView(\"logIn\")}>Have an Account?</button>\r\n          </form>\r\n        )\r\n      case \"logIn\":\r\n        return (\r\n          <form onSubmit={this.onSubmitLogin}>\r\n            <h2>Welcome Back!</h2>\r\n            <fieldset>\r\n              <legend>Log In</legend>\r\n              <ul>\r\n                <li>\r\n                  <label style={errorStyles}>{this.state.error_text}</label>\r\n                </li>\r\n                <li>\r\n                  <label>Email:<br></br>\r\n                    <input type=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email} required/>\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <label>Password:<br></br>\r\n                    <input type=\"password\" id=\"password\" onChange={this.onChange} value={this.state.password} required/>\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </fieldset>\r\n            <button>Login</button>\r\n            <button type=\"button\" onClick={ () => this.changeView(\"signUp\")}>Create an Account</button>\r\n          </form>\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"entry-page\">\r\n        {this.currentView()}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginSignUp","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Welcome from './Welcome';\r\nimport Container from 'react-bootstrap/Container'\r\nimport './App.scss'\r\nimport ChatAgent from './ChatAgent';\r\nimport LoginSignUp from './loginsignup'\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      welcome: true,\r\n      chat: false,\r\n      user_id: null\r\n    }\r\n    this.changeWelcome=this.changeWelcome.bind(this)\r\n    this.changeLogin = this.changeLogin.bind(this)\r\n    this.logOut = this.logOut.bind(this)\r\n  }\r\n\r\n  changeWelcome(){\r\n    this.setState({\r\n      welcome: false\r\n    })\r\n  }\r\n\r\n  changeLogin(id){\r\n    this.setState({\r\n      chat:true,\r\n      user_id: id\r\n    })\r\n  }\r\n\r\n  logOut(){\r\n    this.setState({\r\n      welcome: true,\r\n      chat: false,\r\n      user_id: null,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    let welcome = (\r\n      <Welcome onClick={this.changeWelcome} />\r\n    )\r\n    let loginsignup = null;\r\n    let chatagent = null;\r\n\r\n    if(this.state.welcome===false){\r\n      welcome = null;\r\n      loginsignup = (\r\n        <LoginSignUp success={this.changeLogin} />\r\n      )\r\n    }\r\n\r\n    if(this.state.chat===true){\r\n      loginsignup = null;\r\n      chatagent = (\r\n        <ChatAgent user_id={this.state.user_id} logout={this.logOut}/>\r\n      )\r\n    }\r\n\r\n    if(this.state.welcome===true){\r\n      chatagent = null;\r\n      welcome = (\r\n        <Welcome onClick={this.changeWelcome} />\r\n      )\r\n    }\r\n\r\n\r\n    return(\r\n      <Container>\r\n        {welcome}\r\n        {loginsignup}\r\n        {chatagent}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport Graph from './graph';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}